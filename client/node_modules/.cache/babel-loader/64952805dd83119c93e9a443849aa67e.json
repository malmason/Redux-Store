{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malma\\\\UCONN\\\\Redux-Store\\\\client\\\\src\\\\components\\\\CategoryMenu\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CategoryMenu() {\n  _s();\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const {\n    categories\n  } = state;\n  const {\n    loading,\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose a Category:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), categories.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleClick(item._id);\n      },\n      children: item.name\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CategoryMenu, \"j2fI8MUg+2xPcbId4z17wAYI/0E=\", false, function () {\n  return [useDispatch, useSelector, useQuery];\n});\n\n_c = CategoryMenu;\nexport default CategoryMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryMenu\");","map":{"version":3,"sources":["C:/Users/malma/UCONN/Redux-Store/client/src/components/CategoryMenu/index.js"],"names":["React","useEffect","useQuery","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","useDispatch","useSelector","CategoryMenu","dispatch","state","categories","loading","data","categoryData","type","forEach","category","then","handleClick","id","currentCategory","map","item","_id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SACEC,iBADF,EAEEC,uBAFF,QAGO,qBAHP;AAIA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AAEtB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,KAAK,GAAGH,WAAW,CAAEG,KAAD,IAAWA,KAAZ,CAAzB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAvB;AAEA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAEC;AAAjB,MAAkCb,QAAQ,CAACG,gBAAD,CAAhD;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,YAAJ,EAAkB;AAChBL,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAEb,iBADC;AAEPS,QAAAA,UAAU,EAAEG,YAAY,CAACH;AAFlB,OAAD,CAAR;AAIAG,MAAAA,YAAY,CAACH,UAAb,CAAwBK,OAAxB,CAAiCC,QAAD,IAAc;AAC5CZ,QAAAA,UAAU,CAAC,YAAD,EAAe,KAAf,EAAsBY,QAAtB,CAAV;AACD,OAFD;AAGD,KARD,MAQO,IAAI,CAACL,OAAL,EAAc;AACnBP,MAAAA,UAAU,CAAC,YAAD,EAAe,KAAf,CAAV,CAAgCa,IAAhC,CAAsCP,UAAD,IAAgB;AACnDF,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAEb,iBADC;AAEPS,UAAAA,UAAU,EAAEA;AAFL,SAAD,CAAR;AAID,OALD;AAMD;AACF,GAjBQ,EAiBN,CAACG,YAAD,EAAeF,OAAf,EAAwBH,QAAxB,CAjBM,CAAT;;AAmBA,QAAMU,WAAW,GAAIC,EAAD,IAAQ;AAC1BX,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEZ,uBADC;AAEPkB,MAAAA,eAAe,EAAED;AAFV,KAAD,CAAR;AAID,GALD;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGT,UAAU,CAACW,GAAX,CAAgBC,IAAD,iBACd;AAEE,MAAA,OAAO,EAAE,MAAM;AACbJ,QAAAA,WAAW,CAACI,IAAI,CAACC,GAAN,CAAX;AACD,OAJH;AAAA,gBAMGD,IAAI,CAACE;AANR,OACOF,IAAI,CAACC,GADZ;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAjDQhB,Y;UAEUF,W,EACHC,W,EAG0BN,Q;;;KANjCO,Y;AAmDT,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport {\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n} from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction CategoryMenu() {\r\n \r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => state);\r\n  const { categories } = state;\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories,\r\n      });\r\n      categoryData.categories.forEach((category) => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('categories', 'get').then((categories) => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories,\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = (id) => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Choose a Category:</h2>\r\n      {categories.map((item) => (\r\n        <button\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n"]},"metadata":{},"sourceType":"module"}